{"version":3,"sources":["components/Container/Container.js","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.js","components/filter.js","App.js","index.js"],"names":["Container","children","className","TodoList","todos","onDeleteTodo","onToggleCompleted","map","id","text","completed","classNames","type","checked","onChange","onClick","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","Component","Filter","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","completedTodoCount","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02eb812a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\r\n  <ul className=\"TodoList\">\r\n    {todos.map(({ id, text, completed }) => (\r\n      <li\r\n        key={id}\r\n        className={classNames('TodoList__item', {\r\n          'TodoList__item--completed': completed,\r\n        })}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"TodoList__checkbox\"\r\n          checked={completed}\r\n          onChange={() => onToggleCompleted(id)}\r\n        />\r\n        <p className=\"TodoList__text\">{text}</p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDeleteTodo(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport './index';\r\n\r\nclass TodoEditor extends Component {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.message);\r\n\r\n    this.setState({ message: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          className=\"TodoEditor__textarea\"\r\n          value={this.state.message}\r\n          onChange={this.handleChange}\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"TodoEditor__button\">\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoEditor;","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport shortid from 'shortid';\n// import ColorPicker from './components/ColorPicker';\n// import Counter from './components/Counter';\nimport Container from './components/Container';\nimport TodoList from './components/TodoList';\nimport TodoEditor from './components/TodoEditor';\nimport Filter from './components/filter';\n// import Form from './components/Form';\nimport initialTodos from './components/todos.json';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  toggleCompleted = todoId => {\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if (todo.id === todoId) {\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed,\n    //       };\n    //     }\n\n    //     return todo;\n    //   }),\n    // }));\n\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCount = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        {/* TODO: вынести в отдельный компонент */}\n\n        <div>\n          <p>Всего заметок: {totalTodoCount}</p>\n          <p>Выполнено: {completedTodoCount}</p>\n        </div>\n\n        <TodoEditor onSubmit={this.addTodo} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#F44336' },\n//   { label: 'green', color: '#4CAF50' },\n//   { label: 'blue', color: '#2196F3' },\n//   { label: 'grey', color: '#607D8B' },\n//   { label: 'pink', color: '#E91E63' },\n//   { label: 'indigo', color: '#3F51B5' },\n// ];","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}